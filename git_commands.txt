2. git add . (or name which needs to be staged)
1. git init
3. git status
4. git commit -m "commit has been made"
5. git restore --staged file_name.txt (to make file unstaged)
6. git reset (commit_id) [used to put commits into the unstaged area]
7. git stash (to put changes in backstage which could be brought back using 8.)
8. git stash pop
9. git stash clear (to clear the backstage stashed changes permanently)
10. git remote add origin url(to add a remote repository to the local repository-name of the URL is origin)
11. git remote -v
12. git remote set url
12. git push origin master
13. git branch name_of_brnach
14. git checkout branch
15. Works on directed acyclic graph
16. git merge branch_name (from master branch)
17.git remote add upstream https://github.com/controllerstech/STM32 (upstream name given to remote branch forked)
18, Always use SSH so link should be git@github.com:hjwbwf.com
19. Set the token 
20. Create different pull request for different branches (as hundreds of features may have different lines of code and you would want 
to include them in different pull requests so that you can properly see the changes )
21. git fetch  --all -- prune
22.  git reset --hard upstream/master
23. git remote syntax of link url-git@github.com:controllerstech/STM32.git 
24. git fetch -Downloads changes from the remote repository but does not integrate them into the local working branch.
25. git pull -Downloads changes from the remote repository and automatically merges them into the current local branch. It is essentially a combination of git fetch followed by git merge. 
